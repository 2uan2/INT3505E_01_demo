from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Book(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author=None, borrowed=None, isbn=None, title=None):  # noqa: E501
        """Book - a model defined in OpenAPI

        :param author: The author of this Book.  # noqa: E501
        :type author: str
        :param borrowed: The borrowed of this Book.  # noqa: E501
        :type borrowed: bool
        :param isbn: The isbn of this Book.  # noqa: E501
        :type isbn: int
        :param title: The title of this Book.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'author': str,
            'borrowed': bool,
            'isbn': int,
            'title': str
        }

        self.attribute_map = {
            'author': 'author',
            'borrowed': 'borrowed',
            'isbn': 'isbn',
            'title': 'title'
        }

        self._author = author
        self._borrowed = borrowed
        self._isbn = isbn
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'Book':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Book of this Book.  # noqa: E501
        :rtype: Book
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> str:
        """Gets the author of this Book.


        :return: The author of this Book.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this Book.


        :param author: The author of this Book.
        :type author: str
        """

        self._author = author

    @property
    def borrowed(self) -> bool:
        """Gets the borrowed of this Book.


        :return: The borrowed of this Book.
        :rtype: bool
        """
        return self._borrowed

    @borrowed.setter
    def borrowed(self, borrowed: bool):
        """Sets the borrowed of this Book.


        :param borrowed: The borrowed of this Book.
        :type borrowed: bool
        """

        self._borrowed = borrowed

    @property
    def isbn(self) -> int:
        """Gets the isbn of this Book.


        :return: The isbn of this Book.
        :rtype: int
        """
        return self._isbn

    @isbn.setter
    def isbn(self, isbn: int):
        """Sets the isbn of this Book.


        :param isbn: The isbn of this Book.
        :type isbn: int
        """

        self._isbn = isbn

    @property
    def title(self) -> str:
        """Gets the title of this Book.


        :return: The title of this Book.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Book.


        :param title: The title of this Book.
        :type title: str
        """

        self._title = title
